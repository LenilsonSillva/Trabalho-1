{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport 'react-native-gesture-handler';\nimport Home from \"./pages/Home\";\nimport Email from \"./pages/Email\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useFonts = useFonts({\n    'Arial': require(\"./assets/fonts/Arial.ttf\"),\n    'AssistantMedium': require(\"./assets/fonts/AssistantMedium.ttf\"),\n    'QsSemiBold': require(\"./assets/fonts/QsSemiBold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, null);\n  } else return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Email\",\n    component: Email,\n    options: {\n      title: ''\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/lenil/Documents/Estudos/Aulas/trabaho1/App.js"],"names":["StatusBar","React","useFonts","AppLoading","NavigationContainer","createStackNavigator","Home","Email","Stack","App","require","fontsLoaded","headerShown","title","styles","StyleSheet","create","container","flex"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAAQC,QAAR,QAAuB,WAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAO,8BAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AAEA,IAAMC,KAAK,GAAGH,oBAAoB,EAAlC;AAEA,eAAe,SAASI,GAAT,GAAe;AAE5B,kBAAoBP,QAAQ,CAAC;AAC3B,aAASQ,OAAO,4BADW;AAE3B,uBAAmBA,OAAO,sCAFC;AAG3B,kBAAcA,OAAO;AAHM,GAAD,CAA5B;AAAA;AAAA,MAAKC,WAAL;;AAMA,MAAG,CAACA,WAAJ,EAAgB;AACd,WAAO,oBAAC,UAAD,OAAP;AACD,GAFD,MAGA,OACE,oBAAC,mBAAD,QACE,oBAAC,KAAD,CAAO,SAAP,QACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEL,IAArC;AAA2C,IAAA,OAAO,EAAE;AAACM,MAAAA,WAAW,EAAE;AAAd;AAApD,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEL,KAAtC;AAA6C,IAAA,OAAO,EAAE;AAACM,MAAAA,KAAK,EAAE;AAAR;AAAtD,IAFF,CADF,CADF;AAQD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport {useFonts} from 'expo-font';\r\nimport AppLoading from 'expo-app-loading';\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport 'react-native-gesture-handler';\r\nimport Home from './pages/Home';\r\nimport Email from './pages/Email'\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function App() {\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    'Arial': require('./assets/fonts/Arial.ttf'),\r\n    'AssistantMedium': require('./assets/fonts/AssistantMedium.ttf'),\r\n    'QsSemiBold': require('./assets/fonts/QsSemiBold.ttf')\r\n  });\r\n\r\n  if(!fontsLoaded){\r\n    return <AppLoading/>\r\n  } else\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"Home\" component={Home} options={{headerShown: false}}/>\r\n        <Stack.Screen name=\"Email\" component={Email} options={{title: ''}}/>\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Body from \"./Components/Body\";\nimport Title from \"./Components/Title\";\nimport UserInfo from \"./Components/UserInfo\";\nexport default function Email(_ref) {\n  var route = _ref.route;\n  var id = route.params.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      var response, data;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://mobile.ect.ufrn.br:3002/emails/\" + id.id));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              data = _context.sent;\n              setData(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getData();\n  }, []);\n  return React.createElement(ScrollView, {\n    style: styles.container\n  }, React.createElement(Title, {\n    dados: data\n  }), React.createElement(UserInfo, {\n    dados: data\n  }), React.createElement(Body, {\n    dados: data\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    paddingHorizontal: 7\n  }\n});","map":{"version":3,"sources":["C:/Users/lenil/Documents/Estudos/Aulas/trabaho1/pages/Email/index.js"],"names":["React","useState","useEffect","Body","Title","UserInfo","Email","route","id","params","data","setData","getData","fetch","response","json","styles","container","StyleSheet","create","flex","backgroundColor","paddingHorizontal"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,KAAT,OAAwB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AAEnC,MAAOC,EAAP,GAAaD,KAAK,CAACE,MAAnB,CAAOD,EAAP;;AAEA,kBAAwBP,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AAEIT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMU,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACWC,KAAK,6CAA2CL,EAAE,CAACA,EAA9C,CADhB;;AAAA;AACNM,cAAAA,QADM;AAAA;AAAA,+CAEOA,QAAQ,CAACC,IAAT,EAFP;;AAAA;AAENL,cAAAA,IAFM;AAGZC,cAAAA,OAAO,CAACD,IAAD,CAAP;;AAHY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAKAE,IAAAA,OAAO;AACV,GAPQ,EAON,EAPM,CAAT;AASJ,SACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEI,MAAM,CAACC;AAA1B,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEP;AAAd,IADJ,EAEI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA;AAAjB,IAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEA;AAAb,IAHJ,CADJ;AAOH;AAED,IAAMM,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,OAFV;AAGPC,IAAAA,iBAAiB,EAAE;AAHZ;AADkB,CAAlB,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { View, StyleSheet, FlatList, ScrollView } from 'react-native'\r\nimport Body from './Components/Body';\r\nimport Title from './Components/Title'\r\nimport UserInfo from './Components/UserInfo'\r\n\r\nexport default function Email({route}) {\r\n\r\n    const {id} = route.params;\r\n\r\n    const [data, setData] = useState([])\r\n        \r\n        useEffect(() => {\r\n            const getData = async() => {\r\n                const response = await fetch(`https://mobile.ect.ufrn.br:3002/emails/${id.id}`);\r\n                const data = await response.json();\r\n                setData(data);\r\n            }\r\n            getData();\r\n        }, []);\r\n\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            <Title dados={data}/>\r\n            <UserInfo dados={data}/>\r\n            <Body dados={data}/>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        paddingHorizontal: 7\r\n    }\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}